package controller;

import static org.junit.Assert.assertEquals;

import java.io.StringReader;

import model.GamingModel;
import model.Model;
import org.junit.Before;
import org.junit.Test;

/**
 * Test the gaming console controller.
 */
public class GamingConsoleControllerTest {
  private Model gamingModel;
  private StringBuffer expectOutput;

  /**
   * Set up the test.
   */
  @Before
  public void setUp() {
    gamingModel = new GamingModel("res/mansion.txt", 30);
    expectOutput = new StringBuffer();
    expectOutput.append("Welcome to the kill doctor lucky game\n");
    expectOutput.append("The rooms are initialized as:\n");
    expectOutput.append(gamingModel.displayRooms());
  }

  @Test(expected = IllegalStateException.class)
  public void testFailingAppendable() {
    StringReader input = new StringReader("2 p1 1 0 2 p2 1 1 2 p3 2 2 2 p4 1 4 3");
    Appendable gamelog = new FailingAppendable();
    Controller c = new GamingConsoleController(input, gamelog);
    c.playGame(gamingModel);
  }

  @Test
  public void testInvalidCommand() {
    StringReader input = new StringReader("wofj 5 3 4");
    StringBuffer gamelog = new StringBuffer();
    Controller c = new GamingConsoleController(input, gamelog);
    c.playGame(gamingModel);
    expectOutput.append("Enter 1 to add a player; Enter 2 to add a computer player; "
        + "Enter 3 to start the game; Enter 4 to quit the game\n"
        + "Invalid option, please enter again\n"
        + "Enter 1 to add a player; Enter 2 to add a computer player;"
        + " Enter 3 to start the game; Enter 4 to quit the game\n"
        + "Invalid option, please enter again\n"
        + "Enter 1 to add a player; Enter 2 to add a computer player; "
        + "Enter 3 to start the game; Enter 4 to quit the game\n"
        + "There are no player in the game, please create at least one player\n"
        + "Enter 1 to add a player; Enter 2 to add a computer player; "
        + "Enter 3 to start the game; Enter 4 to quit the game\n" + "Ending game....\n");
    assertEquals(expectOutput.toString(), gamelog.toString());
  }

  @Test
  public void testAddPlayer() {
    StringReader input = new StringReader("1 p1 1 0 2 p2 1 1 1 p3 1 1 3 q");
    StringBuffer gamelog = new StringBuffer();
    Controller c = new GamingConsoleController(input, gamelog);
    c.playGame(gamingModel);
    expectOutput.append("Enter 1 to add a player; Enter 2 to add a computer player; "
        + "Enter 3 to start the game; Enter 4 to quit the game\n"
        + "Please enter the name of the player:\n" + "Please enter the capacity:\n"
        + "Please enter the index of the room that the player is in:\n"
        + "Add player successfully, the current player information:\n"
        + "Target name: Doctor Lucky, Current room: Armory\n"
        + "Character name: p1, Current room: Armory, items: " + "[], player type: human\n" + "\n"
        + "Enter 1 to add a player; Enter 2 to add a computer player; "
        + "Enter 3 to start the game; Enter 4 to quit the game\n"
        + "Please enter the name of the player:\n" + "Please enter the capacity:\n"
        + "Please enter the index of the room that the player is in:\n"
        + "Add player successfully, the current player information:\n"
        + "Target name: Doctor Lucky, Current room: Armory\n"
        + "Character name: p1, Current room: Armory, items:" + " [], player type: human\n"
        + "Character name: p2, Current room: Billiard Room, items: " + "[], player type: computer\n"
        + "\n" + "Enter 1 to add a player; Enter 2 to add a computer player; "
        + "Enter 3 to start the game; Enter 4 to quit the game\n"
        + "Please enter the name of the player:\n" + "Please enter the capacity:\n"
        + "Please enter the index of the room that the player is in:\n"
        + "Add player successfully, the current player information:\n"
        + "Target name: Doctor Lucky, Current room: Armory\n" + "Character name: p1, Current room:"
        + " Armory, items: [], player type: human\n" + "Character name: p2, Current room: Billiard "
        + "Room, items: [], player type: computer\n" + "Character name: p3, Current room: Billiard"
        + " Room, items: [], player type: human\n" + "\n"
        + "Enter 1 to add a player; Enter 2 to add a computer player; "
        + "Enter 3 to start the game; Enter 4 to quit the game\n"
        + "Game start! The players are listed as follow: \n"
        + "Target name: Doctor Lucky, Current room: Armory\n"
        + "Character name: p1, Current room: Armory, items: [], player type: human\n"
        + "Character name: p2, Current room: " + "Billiard Room, items: [], player type: computer\n"
        + "Character name: p3, Current room: " + "Billiard Room, items: [], player type: human\n"
        + "Now we are in the 1 turn\n" + "The player in current turn is: p1\n"
        + "The information of the room that the player is in:\n"
        + "---------------------------------\n" + "SpecifiedRoom{name='Armory', index=0, \n"
        + "leftCorner=19, rightCorner=26, upperCorner=22, lowerCorner=23, \n"
        + "items in the room =[Revolver], \n"
        + "characters=[Target name: Doctor Lucky, Current room: Armory, "
        + "Character name: p1, Current room: Armory, items: [], player type: human]}, \n"
        + "neighbours = [Dining Hall, Billiard Room, ][][][Drawing Room, ], \n"
        + "visibleRooms = [Dining Hall, Billiard Room, Trophy Room, "
        + "Library, Nursery, Tennessee Room,"
        + " Lilac Room, Master Suite, Drawing Room, Wine Cellar, ]\n"
        + "---------------------------------\n" + "Enter 1 to move to neighbour. "
        + "Then enter the direction and index of the neighbour\n"
        + "Enter 2 to pick up an item in the room. " + "Then enter the index of the item\n"
        + "Enter 3 to look around\n" + "Game quit!\n");
    assertEquals(expectOutput.toString(), gamelog.toString());
  }

  @Test
  public void testAddInvalidPlayer() {
    StringReader input = new StringReader("1 p1 1 100 1 p1 1 1 2 p1 1 1 4");
    StringBuffer gamelog = new StringBuffer();
    Controller c = new GamingConsoleController(input, gamelog);
    c.playGame(gamingModel);
    expectOutput.append("Enter 1 to add a player; Enter 2 to add a computer player; "
        + "Enter 3 to start the game; Enter 4 to quit the game\n"
        + "Please enter the name of the player:\n" + "Please enter the capacity:\n"
        + "Please enter the index of the room that the player is in:\n"
        + "Invalid room index or name duplicated!\n"
        + "Enter 1 to add a player; Enter 2 to add a computer player;"
        + " Enter 3 to start the game; Enter 4 to quit the game\n"
        + "Please enter the name of the player:\n" + "Please enter the capacity:\n"
        + "Please enter the index of the room that the player is in:\n"
        + "Add player successfully, the current player information:\n"
        + "Target name: Doctor Lucky, Current room: Armory\n"
        + "Character name: p1, Current room: Billiard Room, "
        + "items: [], player type: human\n\n");
    expectOutput.append("Enter 1 to add a player; Enter 2 to add a computer player; "
        + "Enter 3 to start the game; Enter 4 to quit the game\n"
        + "Please enter the name of the player:\n" + "Please enter the capacity:\n"
        + "Please enter the index of the room that the player is in:\n"
        + "Invalid room index or name duplicated!\n"
        + "Enter 1 to add a player; Enter 2 to add a computer player;"
        + " Enter 3 to start the game; Enter 4 to quit the game\n" + "Ending game....\n");
    assertEquals(expectOutput.toString(), gamelog.toString());
  }

  @Test
  public void testComputerPlayer() {
    StringReader input = new StringReader("2 p1 1 0 2 p2 1 1 2 p3 2 2 2 p4 1 4 3");
    StringBuffer gamelog = new StringBuffer();
    Controller c = new GamingConsoleController(input, gamelog);
    c.playGame(gamingModel);
    expectOutput.append("Enter 1 to add a player; Enter 2 to add a computer player; "
        + "Enter 3 to start the game; Enter 4 to quit the game\n"
        + "Please enter the name of the player:\n" + "Please enter the capacity:\n"
        + "Please enter the index of the room that the player is in:\n"
        + "Add player successfully, the current player information:\n"
        + "Target name: Doctor Lucky, Current room: Armory\n"
        + "Character name: p1, Current room: Armory, items: []," + " player type: computer\n" + "\n"
        + "Enter 1 to add a player; Enter 2 to add a computer "
        + "player; Enter 3 to start the game; Enter 4 to quit the game\n"
        + "Please enter the name of the player:\n" + "Please enter the capacity:\n"
        + "Please enter the index of the room that the player is in:\n"
        + "Add player successfully, the current player information:\n"
        + "Target name: Doctor Lucky, Current room: Armory\n"
        + "Character name: p1, Current room: Armory, " + "items: [], player type: computer\n"
        + "Character name: p2, Current room: " + "Billiard Room, items: [], player type: computer\n"
        + "\n" + "Enter 1 to add a player; Enter 2 to add a "
        + "computer player; Enter 3 to start the game; Enter 4 to quit the game\n"
        + "Please enter the name of the player:\n" + "Please enter the capacity:\n"
        + "Please enter the index of the room that the player is in:\n"
        + "Add player successfully, the current player information:\n"
        + "Target name: Doctor Lucky, Current room: Armory\n"
        + "Character name: p1, Current room: Armory, items: " + "[], player type: computer\n"
        + "Character name: p2, Current room: Billiard Room, " + "items: [], player type: computer\n"
        + "Character name: p3, Current room: Carriage House, "
        + "items: [], player type: computer\n" + "\n"
        + "Enter 1 to add a player; Enter 2 to add a computer player; "
        + "Enter 3 to start the game; Enter 4 to quit the game\n"
        + "Please enter the name of the player:\n" + "Please enter the capacity:\n"
        + "Please enter the index of the room that the player is in:\n"
        + "Add player successfully, the current player information:\n"
        + "Target name: Doctor Lucky, Current room: Armory\n"
        + "Character name: p1, Current room: Armory, items: [], " + "player type: computer\n"
        + "Character name: p2, Current room: Billiard Room, items: " + "[], player type: computer\n"
        + "Character name: p3, Current room: Carriage House, items: "
        + "[], player type: computer\n" + "Character name: p4, Current room: Drawing Room, items: "
        + "[], player type: computer\n" + "\n"
        + "Enter 1 to add a player; Enter 2 to add a computer player; "
        + "Enter 3 to start the game; Enter 4 to quit the game\n"
        + "Game start! The players are listed as follow: \n"
        + "Target name: Doctor Lucky, Current room: Armory\n"
        + "Character name: p1, Current room: Armory, items: [], player type: computer\n"
        + "Character name: p2, Current room: Billiard Room, items: [], player type: computer\n"
        + "Character name: p3, Current room: Carriage House, items: [], player type: computer\n"
        + "Character name: p4, Current room: Drawing Room, items: [], player type: computer\n"
        + "---------------------------------\n" + "Computer p1 pick up an item!\n"
        + "---------------------------------\n" + "Now the status of players are shown as follow:\n"
        + "Target name: Doctor Lucky, Current room: Billiard Room\n"
        + "Character name: p1, Current room: Armory, items: [Revolver], player type: computer\n"
        + "Character name: p2, Current room: Billiard Room, items: [], player type: computer\n"
        + "Character name: p3, Current room: Carriage House, items: [], player type: computer\n"
        + "Character name: p4, Current room: Drawing Room, items: [], player type: computer\n"
        + "\n" + "---------------------------------\n" + "Computer p2 pick up an item!\n"
        + "---------------------------------\n" + "Now the status of players are shown as follow:\n"
        + "Target name: Doctor Lucky, Current room: Carriage House\n"
        + "Character name: p1, Current room: Armory, items: [Revolver], player type: computer\n"
        + "Character name: p2, Current room: Billiard Room, "
        + "items: [Billiard Cue], player type: computer\n"
        + "Character name: p3, Current room: Carriage House, items: [], player type: computer\n"
        + "Character name: p4, Current room: Drawing Room, items: [], player type: computer\n"
        + "\n" + "---------------------------------\n" + "Computer p3 moves to the neighbour!\n"
        + "---------------------------------\n" + "Now the status of players are shown as follow:\n"
        + "Target name: Doctor Lucky, Current room: Dining Hall\n"
        + "Character name: p1, Current room: Armory, items: [Revolver], player type: computer\n"
        + "Character name: p2, Current room: Billiard Room, items: "
        + "[Billiard Cue], player type: computer\n"
        + "Character name: p3, Current room: Winter Garden, items: [], player type: computer\n"
        + "Character name: p4, Current room: Drawing Room, items: [], player type: computer\n"
        + "\n" + "---------------------------------\n" + "Computer p4 moves to the neighbour!\n"
        + "---------------------------------\n" + "Now the status of players are shown as follow:\n"
        + "Target name: Doctor Lucky, Current room: Drawing Room\n"
        + "Character name: p1, Current room: Armory, items: [Revolver], player type: computer\n"
        + "Character name: p2, Current room: Billiard Room, items: "
        + "[Billiard Cue], player type: computer\n"
        + "Character name: p3, Current room: Winter Garden, items: [], player type: computer\n"
        + "Character name: p4, Current room: Wine Cellar, items: [], player type: computer\n" + "\n"
        + "---------------------------------\n" + "Computer p1 Look around!\n"
        + "---------------------------------\n" + "Now the status of players are shown as follow:\n"
        + "Target name: Doctor Lucky, Current room: Foyer\n"
        + "Character name: p1, Current room: Armory, items: [Revolver], player type: computer\n"
        + "Character name: p2, Current room: Billiard Room, "
        + "items: [Billiard Cue], player type: computer\n"
        + "Character name: p3, Current room: Winter Garden, items: [], player type: computer\n"
        + "Character name: p4, Current room: Wine Cellar, items: [], player type: computer\n" + "\n"
        + "Reach the max turn, and the game end!\n");
    assertEquals(expectOutput.toString(), gamelog.toString());
  }

  @Test
  public void testMoveUp() {
    StringReader input = new StringReader("1 p1 1 3 3 1 0 0 q");
    StringBuffer gamelog = new StringBuffer();
    Controller c = new GamingConsoleController(input, gamelog);
    c.playGame(gamingModel);
    expectOutput.append("Enter 1 to add a player; Enter 2 to add a computer player; "
        + "Enter 3 to start the game; Enter 4 to quit the game\n"
        + "Please enter the name of the player:\n" + "Please enter the capacity:\n"
        + "Please enter the index of the room that the player is in:\n"
        + "Add player successfully, the current player information:\n"
        + "Target name: Doctor Lucky, Current room: Armory\n"
        + "Character name: p1, Current room: Dining Hall, items: [], player type: human\n" + "\n"
        + "Enter 1 to add a player; Enter 2 to add a computer player; "
        + "Enter 3 to start the game; Enter 4 to quit the game\n"
        + "Game start! The players are listed as follow: \n"
        + "Target name: Doctor Lucky, Current room: Armory\n"
        + "Character name: p1, Current room: Dining Hall, items: [], player type: human\n"
        + "Now we are in the 1 turn\n" + "The player in current turn is: p1\n"
        + "The information of the room that the player is in:\n"
        + "---------------------------------\n" + "SpecifiedRoom{name='Dining Hall', index=3, \n"
        + "leftCorner=11, rightCorner=20, upperCorner=12, lowerCorner=21, \n"
        + "items in the room =[], \n" + "characters=[Character name: p1, Current room: "
        + "Dining Hall, items: [], player type: human]}, \n"
        + "neighbours = [Tennessee Room, ][Billiard Room,"
        + " Trophy Room, ][Armory, Wine Cellar, Drawing Room, ][Parlor, Kitchen, ], \n"
        + "visibleRooms = [Tennessee Room, Lilac Room, "
        + "Master Suite, Billiard Room, Trophy Room, Armory, "
        + "Wine Cellar, Drawing Room, Foyer, Piazza, Parlor, Kitchen, ]\n"
        + "---------------------------------\n"
        + "Enter 1 to move to neighbour. Then enter the direction and index of the neighbour\n"
        + "Enter 2 to pick up an item in the room. Then enter the index of the item\n"
        + "Enter 3 to look around\n" + "Now the status of players are shown as follow:\n"
        + "Target name: Doctor Lucky, Current room: Billiard Room\n"
        + "Character name: p1, Current room: Tennessee Room, items: [], player type: human\n" + "\n"
        + "Now we are in the 2 turn\n" + "The player in current turn is: p1\n"
        + "The information of the room that the player is in:\n"
        + "---------------------------------\n"
        + "SpecifiedRoom{name='Tennessee Room', index=17, \n"
        + "leftCorner=11, rightCorner=20, upperCorner=8, lowerCorner=11, \n"
        + "items in the room =[], \n" + "characters=[Character name: p1, Current room: "
        + "Tennessee Room, items: [], player type: human]}, \n"
        + "neighbours = [Lilac Room, Master Suite, ]"
        + "[Trophy Room, ][Dining Hall, ][Parlor, ], \n"
        + "visibleRooms = [Lilac Room, Master Suite, Trophy Room, "
        + "Dining Hall, Armory, Wine Cellar, Drawing Room, Foyer, Piazza, Parlor, ]\n"
        + "---------------------------------\n"
        + "Enter 1 to move to neighbour. Then enter the direction and index of the neighbour\n"
        + "Enter 2 to pick up an item in the room. Then enter the index of the item\n"
        + "Enter 3 to look around\n" + "Game quit!\n");
    assertEquals(expectOutput.toString(), gamelog.toString());
  }

  @Test
  public void testMoveRight() {
    StringReader input = new StringReader("1 p1 1 3 3 1 1 0 q");
    StringBuffer gamelog = new StringBuffer();
    Controller c = new GamingConsoleController(input, gamelog);
    c.playGame(gamingModel);
    expectOutput.append("Enter 1 to add a player; Enter 2 to add a computer player;"
        + " Enter 3 to start the game; Enter 4 to quit the game\n"
        + "Please enter the name of the player:\n" + "Please enter the capacity:\n"
        + "Please enter the index of the room that the player is in:\n"
        + "Add player successfully, the current player information:\n"
        + "Target name: Doctor Lucky, Current room: Armory\n"
        + "Character name: p1, Current room: Dining Hall, items: [], player type: human\n" + "\n"
        + "Enter 1 to add a player; Enter 2 to add a computer player;"
        + " Enter 3 to start the game; Enter 4 to quit the game\n"
        + "Game start! The players are listed as follow: \n"
        + "Target name: Doctor Lucky, Current room: Armory\n"
        + "Character name: p1, Current room: Dining Hall, items: [], player type: human\n"
        + "Now we are in the 1 turn\n" + "The player in current turn is: p1\n"
        + "The information of the room that the player is in:\n"
        + "---------------------------------\n" + "SpecifiedRoom{name='Dining Hall', index=3, \n"
        + "leftCorner=11, rightCorner=20, upperCorner=12, lowerCorner=21, \n"
        + "items in the room =[], \n"
        + "characters=[Character name: p1, Current room: Dining Hall, "
        + "items: [], player type: human]}, \n"
        + "neighbours = [Tennessee Room, ][Billiard Room, Trophy Room, ]"
        + "[Armory, Wine Cellar, Drawing Room, ][Parlor, Kitchen, ], \n"
        + "visibleRooms = [Tennessee Room, Lilac Room, Master Suite, "
        + "Billiard Room, Trophy Room, Armory, Wine Cellar, Drawing "
        + "Room, Foyer, Piazza, Parlor, Kitchen, ]\n" + "---------------------------------\n"
        + "Enter 1 to move to neighbour. Then enter the direction and index of the neighbour\n"
        + "Enter 2 to pick up an item in the room. Then enter the index of the item\n"
        + "Enter 3 to look around\n" + "Now the status of players are shown as follow:\n"
        + "Target name: Doctor Lucky, Current room: Billiard Room\n"
        + "Character name: p1, Current room: Billiard Room, items: [], player type: human\n" + "\n"
        + "Now we are in the 2 turn\n" + "The player in current turn is: p1\n"
        + "The information of the room that the player is in:\n"
        + "---------------------------------\n" + "SpecifiedRoom{name='Billiard Room', index=1, \n"
        + "leftCorner=21, rightCorner=28, upperCorner=16, lowerCorner=21, \n"
        + "items in the room =[Billiard Cue], \n"
        + "characters=[Character name: p1, Current room: Billiard Room, items: [], player type:"
        + " human, Target name: Doctor Lucky, Current room: Billiard Room]}, \n"
        + "neighbours = [Trophy Room, ][][Armory, ][Dining Hall, ], \n"
        + "visibleRooms = [Trophy Room, Library, Nursery, Armory, "
        + "Dining Hall, Parlor, Kitchen, ]\n" + "---------------------------------\n"
        + "Enter 1 to move to neighbour. Then enter the direction and index of the neighbour\n"
        + "Enter 2 to pick up an item in the room. Then enter the index of the item\n"
        + "Enter 3 to look around\n" + "Game quit!\n");
    assertEquals(expectOutput.toString(), gamelog.toString());
  }

  @Test
  public void testMoveLower() {
    StringReader input = new StringReader("1 p1 1 3 3 1 2 0 q");
    StringBuffer gamelog = new StringBuffer();
    Controller c = new GamingConsoleController(input, gamelog);
    c.playGame(gamingModel);
    expectOutput.append("Enter 1 to add a player; Enter 2 to add a computer player;"
        + " Enter 3 to start the game; Enter 4 to quit the game\n"
        + "Please enter the name of the player:\n" + "Please enter the capacity:\n"
        + "Please enter the index of the room that the player is in:\n"
        + "Add player successfully, the current player information:\n"
        + "Target name: Doctor Lucky, Current room: Armory\n"
        + "Character name: p1, Current room: Dining Hall, items: [], player type: human\n" + "\n"
        + "Enter 1 to add a player; Enter 2 to add a computer player;"
        + " Enter 3 to start the game; Enter 4 to quit the game\n"
        + "Game start! The players are listed as follow: \n"
        + "Target name: Doctor Lucky, Current room: Armory\n"
        + "Character name: p1, Current room: Dining Hall, items: [], player type: human\n"
        + "Now we are in the 1 turn\n" + "The player in current turn is: p1\n"
        + "The information of the room that the player is in:\n"
        + "---------------------------------\n" + "SpecifiedRoom{name='Dining Hall', index=3, \n"
        + "leftCorner=11, rightCorner=20, upperCorner=12, lowerCorner=21, \n"
        + "items in the room =[], \n"
        + "characters=[Character name: p1, Current room: Dining Hall, "
        + "items: [], player type: human]}, \n"
        + "neighbours = [Tennessee Room, ][Billiard Room, Trophy Room, ]"
        + "[Armory, Wine Cellar, Drawing Room, ][Parlor, Kitchen, ], \n"
        + "visibleRooms = [Tennessee Room, Lilac Room, Master Suite, "
        + "Billiard Room, Trophy Room, Armory, Wine Cellar, Drawing Room,"
        + " Foyer, Piazza, Parlor, Kitchen, ]\n" + "---------------------------------\n"
        + "Enter 1 to move to neighbour. Then enter the direction and index of the neighbour\n"
        + "Enter 2 to pick up an item in the room. Then enter the index of the item\n"
        + "Enter 3 to look around\n" + "Now the status of players are shown as follow:\n"
        + "Target name: Doctor Lucky, Current room: Billiard Room\n"
        + "Character name: p1, Current room: Armory, items: [], player type: human\n" + "\n"
        + "Now we are in the 2 turn\n" + "The player in current turn is: p1\n"
        + "The information of the room that the player is in:\n"
        + "---------------------------------\n" + "SpecifiedRoom{name='Armory', index=0, \n"
        + "leftCorner=19, rightCorner=26, upperCorner=22, lowerCorner=23, \n"
        + "items in the room =[Revolver], \n"
        + "characters=[Character name: p1, Current room: Armory, items:"
        + " [], player type: human]}, \n"
        + "neighbours = [Dining Hall, Billiard Room, ][][][Drawing Room, ], \n"
        + "visibleRooms = [Dining Hall, Billiard Room, Trophy Room, Library, "
        + "Nursery, Tennessee Room, Lilac Room, Master Suite, Drawing Room, Wine Cellar, ]\n"
        + "---------------------------------\n"
        + "Enter 1 to move to neighbour. Then enter the direction and index of the neighbour\n"
        + "Enter 2 to pick up an item in the room. Then enter the index of the item\n"
        + "Enter 3 to look around\n" + "Game quit!\n");
    assertEquals(expectOutput.toString(), gamelog.toString());
  }

  @Test
  public void testMoveLeft() {
    StringReader input = new StringReader("1 p1 1 3 3 1 3 0 q");
    StringBuffer gamelog = new StringBuffer();
    Controller c = new GamingConsoleController(input, gamelog);
    c.playGame(gamingModel);
    expectOutput.append("Enter 1 to add a player; Enter 2 to add a computer player; "
        + "Enter 3 to start the game; Enter 4 to quit the game\n"
        + "Please enter the name of the player:\n" + "Please enter the capacity:\n"
        + "Please enter the index of the room that the player is in:\n"
        + "Add player successfully, the current player information:\n"
        + "Target name: Doctor Lucky, Current room: Armory\n"
        + "Character name: p1, Current room: Dining Hall, items: [], player type: human\n" + "\n"
        + "Enter 1 to add a player; Enter 2 to add a computer player;"
        + " Enter 3 to start the game; Enter 4 to quit the game\n"
        + "Game start! The players are listed as follow: \n"
        + "Target name: Doctor Lucky, Current room: Armory\n"
        + "Character name: p1, Current room: Dining Hall, items: [], player type: human\n"
        + "Now we are in the 1 turn\n" + "The player in current turn is: p1\n"
        + "The information of the room that the player is in:\n"
        + "---------------------------------\n" + "SpecifiedRoom{name='Dining Hall', index=3, \n"
        + "leftCorner=11, rightCorner=20, upperCorner=12, lowerCorner=21, \n"
        + "items in the room =[], \n" + "characters=[Character name: p1, Current room: Dining Hall,"
        + " items: [], player type: human]}, \n"
        + "neighbours = [Tennessee Room, ][Billiard Room, Trophy Room, ]["
        + "Armory, Wine Cellar, Drawing Room, ][Parlor, Kitchen, ], \n"
        + "visibleRooms = [Tennessee Room, Lilac Room, Master Suite, "
        + "Billiard Room, Trophy Room, Armory, Wine Cellar, Drawing Room, Fo"
        + "yer, Piazza, Parlor, Kitchen, ]\n" + "---------------------------------\n"
        + "Enter 1 to move to neighbour. Then enter the direction and index of the neighbour\n"
        + "Enter 2 to pick up an item in the room. Then enter the index of the item\n"
        + "Enter 3 to look around\n" + "Now the status of players are shown as follow:\n"
        + "Target name: Doctor Lucky, Current room: Billiard Room\n"
        + "Character name: p1, Current room: Parlor, items: [], player type: human\n" + "\n"
        + "Now we are in the 2 turn\n" + "The player in current turn is: p1\n"
        + "The information of the room that the player is in:\n"
        + "---------------------------------\n" + "SpecifiedRoom{name='Parlor', index=14, \n"
        + "leftCorner=5, rightCorner=10, upperCorner=10, lowerCorner=15, \n"
        + "items in the room =[], \n"
        + "characters=[Character name: p1, Current room: Parlor, items"
        + ": [], player type: human]}, \n"
        + "neighbours = [Servants' Quarters, ][Dining Hall, Tennessee Room, ][Kitchen, ][], \n"
        + "visibleRooms = [Servants' Quarters, Lancaster Room, Dining Ha"
        + "ll, Tennessee Room, Trophy Room, Billiard Room, Trophy "
        + "Room, Kitchen, Wine Cellar, ]\n" + "---------------------------------\n"
        + "Enter 1 to move to neighbour. Then enter the direction and index of the neighbour\n"
        + "Enter 2 to pick up an item in the room. Then enter the index of the item\n"
        + "Enter 3 to look around\n" + "Game quit!\n");
    assertEquals(expectOutput.toString(), gamelog.toString());
  }

  @Test
  public void testInvalidMove() {
    StringReader input = new StringReader("1 p1 1 0 3 1 1 0 100 0 0 100 q");
    StringBuffer gamelog = new StringBuffer();
    Controller c = new GamingConsoleController(input, gamelog);
    c.playGame(gamingModel);
    expectOutput.append("Enter 1 to add a player; Enter 2 to add a computer playe"
        + "r; Enter 3 to start the game; Enter 4 to quit the game\n"
        + "Please enter the name of the player:\n" + "Please enter the capacity:\n"
        + "Please enter the index of the room that the player is in:\n"
        + "Add player successfully, the current player information:\n"
        + "Target name: Doctor Lucky, Current room: Armory\n"
        + "Character name: p1, Current room: Armory, items: [], player type: human\n" + "\n"
        + "Enter 1 to add a player; Enter 2 to add a computer player;"
        + " Enter 3 to start the game; Enter 4 to quit the game\n"
        + "Game start! The players are listed as follow: \n"
        + "Target name: Doctor Lucky, Current room: Armory\n"
        + "Character name: p1, Current room: Armory, items: [], player type: human\n"
        + "Now we are in the 1 turn\n" + "The player in current turn is: p1\n"
        + "The information of the room that the player is in:\n"
        + "---------------------------------\n" + "SpecifiedRoom{name='Armory', index=0, \n"
        + "leftCorner=19, rightCorner=26, upperCorner=22, lowerCorner=23, \n"
        + "items in the room =[Revolver], \n"
        + "characters=[Target name: Doctor Lucky, Current room: Armor"
        + "y, Character name: p1, Current room: Armory, items: [], player type: human]}, \n"
        + "neighbours = [Dining Hall, Billiard Room, ][][][Drawing Room, ], \n"
        + "visibleRooms = [Dining Hall, Billiard Room, Trophy Room, Libr"
        + "ary, Nursery, Tennessee Room, Lilac Room, Master Suite, Dr"
        + "awing Room, Wine Cellar, ]\n" + "---------------------------------\n"
        + "Enter 1 to move to neighbour. Then enter the direction and index of the neighbour\n"
        + "Enter 2 to pick up an item in the room. Then enter the index of the item\n"
        + "Enter 3 to look around\n" + "Invalid input, please enter again\n"
        + "Now the status of players are shown as follow:\n"
        + "Target name: Doctor Lucky, Current room: Billiard Room\n"
        + "Character name: p1, Current room: Armory, items: [], player type: human\n" + "\n"
        + "Now we are in the 1 turn\n" + "The player in current turn is: p1\n"
        + "The information of the room that the player is in:\n"
        + "---------------------------------\n" + "SpecifiedRoom{name='Armory', index=0, \n"
        + "leftCorner=19, rightCorner=26, upperCorner=22, lowerCorner=23, \n"
        + "items in the room =[Revolver], \n"
        + "characters=[Character name: p1, Current room: Armory, ite"
        + "ms: [], player type: human]}, \n"
        + "neighbours = [Dining Hall, Billiard Room, ][][][Drawing Room, ], \n"
        + "visibleRooms = [Dining Hall, Billiard Room, Trophy Room, Li"
        + "brary, Nursery, Tennessee Room, Lilac Room, Master S"
        + "uite, Drawing Room, Wine Cellar, ]\n" + "---------------------------------\n"
        + "Enter 1 to move to neighbour. Then enter the direction and index of the neighbour\n"
        + "Enter 2 to pick up an item in the room. Then enter the index of the item\n"
        + "Enter 3 to look around\n" + "Invalid option, please enter again.\n"
        + "Now the status of players are shown as follow:\n"
        + "Target name: Doctor Lucky, Current room: Carriage House\n"
        + "Character name: p1, Current room: Armory, items: [], player type: human\n" + "\n"
        + "Now we are in the 1 turn\n" + "The player in current turn is: p1\n"
        + "The information of the room that the player is in:\n"
        + "---------------------------------\n" + "SpecifiedRoom{name='Armory', index=0, \n"
        + "leftCorner=19, rightCorner=26, upperCorner=22, lowerCorner=23, \n"
        + "items in the room =[Revolver], \n"
        + "characters=[Character name: p1, Current room: Armory,"
        + " items: [], player type: human]}, \n"
        + "neighbours = [Dining Hall, Billiard Room, ][][][Drawing Room, ], \n"
        + "visibleRooms = [Dining Hall, Billiard Room, Trophy Room, Library,"
        + " Nursery, Tennessee Room, Lilac Room, Master Suite, Drawing Room, Wine Cellar, ]\n"
        + "---------------------------------\n"
        + "Enter 1 to move to neighbour. Then enter the direction and index of the neighbour\n"
        + "Enter 2 to pick up an item in the room. Then enter the index of the item\n"
        + "Enter 3 to look around\n" + "Invalid option, please enter again.\n"
        + "Now the status of players are shown as follow:\n"
        + "Target name: Doctor Lucky, Current room: Dining Hall\n"
        + "Character name: p1, Current room: Armory, items: [], player type: human\n" + "\n"
        + "Now we are in the 1 turn\n" + "The player in current turn is: p1\n"
        + "The information of the room that the player is in:\n"
        + "---------------------------------\n" + "SpecifiedRoom{name='Armory', index=0, \n"
        + "leftCorner=19, rightCorner=26, upperCorner=22, lowerCorner=23, \n"
        + "items in the room =[Revolver], \n"
        + "characters=[Character name: p1, Current room: Armory"
        + ", items: [], player type: human]}, \n"
        + "neighbours = [Dining Hall, Billiard Room, ][][][Drawing Room, ], \n"
        + "visibleRooms = [Dining Hall, Billiard Room, Trophy Room, "
        + "Library, Nursery, Tennessee Room, Lilac Room, Master Suite"
        + ", Drawing Room, Wine Cellar, ]\n" + "---------------------------------\n"
        + "Enter 1 to move to neighbour. Then enter the direction and index of the neighbour\n"
        + "Enter 2 to pick up an item in the room. Then enter the index of the item\n"
        + "Enter 3 to look around\n" + "Invalid option, please enter again.\n"
        + "Now the status of players are shown as follow:\n"
        + "Target name: Doctor Lucky, Current room: Drawing Room\n"
        + "Character name: p1, Current room: Armory, items: [], player type: human\n" + "\n"
        + "Now we are in the 1 turn\n" + "The player in current turn is: p1\n"
        + "The information of the room that the player is in:\n"
        + "---------------------------------\n" + "SpecifiedRoom{name='Armory', index=0, \n"
        + "leftCorner=19, rightCorner=26, upperCorner=22, lowerCorner=23, \n"
        + "items in the room =[Revolver], \n"
        + "characters=[Character name: p1, Current room: Armory, items: [],"
        + " player type: human]}, \n"
        + "neighbours = [Dining Hall, Billiard Room, ][][][Drawing Room, ], \n"
        + "visibleRooms = [Dining Hall, Billiard Room, Trophy Room,"
        + " Library, Nursery, Tennessee Room, Lilac Room, Master Sui"
        + "te, Drawing Room, Wine Cellar, ]\n" + "---------------------------------\n"
        + "Enter 1 to move to neighbour. Then enter the direction and index of the neighbour\n"
        + "Enter 2 to pick up an item in the room. Then enter the index of the item\n"
        + "Enter 3 to look around\n" + "Invalid option, please enter again.\n"
        + "Now the status of players are shown as follow:\n"
        + "Target name: Doctor Lucky, Current room: Foyer\n"
        + "Character name: p1, Current room: Armory, items: [], player type: human\n" + "\n"
        + "Now we are in the 1 turn\n" + "The player in current turn is: p1\n"
        + "The information of the room that the player is in:\n"
        + "---------------------------------\n" + "SpecifiedRoom{name='Armory', index=0, \n"
        + "leftCorner=19, rightCorner=26, upperCorner=22, lowerCorner=23, \n"
        + "items in the room =[Revolver], \n"
        + "characters=[Character name: p1, Current room: Armory"
        + ", items: [], player type: human]}, \n"
        + "neighbours = [Dining Hall, Billiard Room, ][][][Drawing Room, ], \n"
        + "visibleRooms = [Dining Hall, Billiard Room, Trophy Room, "
        + "Library, Nursery, Tennessee Room, Lilac Room, Master Suite, D"
        + "rawing Room, Wine Cellar, ]\n" + "---------------------------------\n"
        + "Enter 1 to move to neighbour. Then enter the direction and index of the neighbour\n"
        + "Enter 2 to pick up an item in the room. Then enter the index of the item\n"
        + "Enter 3 to look around\n" + "Game quit!\n");
    assertEquals(expectOutput.toString(), gamelog.toString());
  }

  @Test
  public void testPickItem() {
    StringReader input = new StringReader("1 p1 1 0 3 2 0 q");
    StringBuffer gamelog = new StringBuffer();
    Controller c = new GamingConsoleController(input, gamelog);
    c.playGame(gamingModel);
    expectOutput.append("Enter 1 to add a player; Enter 2 to add a computer player; Enter 3 "
        + "to start the game; Enter 4 to quit the game\n" + "Please enter the name of the player:\n"
        + "Please enter the capacity:\n"
        + "Please enter the index of the room that the player is in:\n"
        + "Add player successfully, the current player information:\n"
        + "Target name: Doctor Lucky, Current room: Armory\n"
        + "Character name: p1, Current room: Armory, items: [], player type: human\n" + "\n"
        + "Enter 1 to add a player; Enter 2 to add a computer player; Enter "
        + "3 to start the game; Enter 4 to quit the game\n"
        + "Game start! The players are listed as follow: \n"
        + "Target name: Doctor Lucky, Current room: Armory\n"
        + "Character name: p1, Current room: Armory, items: [], player type: human\n"
        + "Now we are in the 1 turn\n" + "The player in current turn is: p1\n"
        + "The information of the room that the player is in:\n"
        + "---------------------------------\n" + "SpecifiedRoom{name='Armory', index=0, \n"
        + "leftCorner=19, rightCorner=26, upperCorner=22, lowerCorner=23, \n"
        + "items in the room =[Revolver], \n"
        + "characters=[Target name: Doctor Lucky, Current room: Armory, Character na"
        + "me: p1, Current room: Armory, items: [], player type: human]}, \n"
        + "neighbours = [Dining Hall, Billiard Room, ][][][Drawing Room, ], \n"
        + "visibleRooms = [Dining Hall, Billiard Room, Trophy Room, Library, Nursery, Ten"
        + "nessee Room, Lilac Room, Master Suite, Drawing Room, Wine Cellar, ]\n"
        + "---------------------------------\n"
        + "Enter 1 to move to neighbour. Then enter the direction and index of the neighbour\n"
        + "Enter 2 to pick up an item in the room. Then enter the index of the item\n"
        + "Enter 3 to look around\n" + "Now the status of players are shown as follow:\n"
        + "Target name: Doctor Lucky, Current room: Billiard Room\n"
        + "Character name: p1, Current room: Armory, items: [Revolver], player type: human\n" + "\n"
        + "Now we are in the 2 turn\n" + "The player in current turn is: p1\n"
        + "The information of the room that the player is in:\n"
        + "---------------------------------\n" + "SpecifiedRoom{name='Armory', index=0, \n"
        + "leftCorner=19, rightCorner=26, upperCorner=22, lowerCorner=23, \n"
        + "items in the room =[], \n"
        + "characters=[Character name: p1, Current room: Armory, items: [Revolver], p"
        + "layer type: human]}, \n"
        + "neighbours = [Dining Hall, Billiard Room, ][][][Drawing Room, ], \n"
        + "visibleRooms = [Dining Hall, Billiard Room, Trophy Room, Library, Nurse"
        + "ry, Tennessee Room, Lilac Room, Master Suite, Drawing Room, Wine Cellar, ]\n"
        + "---------------------------------\n"
        + "Enter 1 to move to neighbour. Then enter the direction and index of the neighbour\n"
        + "Enter 2 to pick up an item in the room. Then enter the index of the item\n"
        + "Enter 3 to look around\n" + "Game quit!\n");
    assertEquals(expectOutput.toString(), gamelog.toString());
  }

  @Test
  public void testPickInvalidItem() {
    StringReader input = new StringReader("1 p1 1 0 3 2 10 q");
    StringBuffer gamelog = new StringBuffer();
    Controller c = new GamingConsoleController(input, gamelog);
    c.playGame(gamingModel);
    expectOutput.append("Enter 1 to add a player; Enter 2 to add a computer player; E"
        + "nter 3 to start the game; Enter 4 to quit the game\n"
        + "Please enter the name of the player:\n" + "Please enter the capacity:\n"
        + "Please enter the index of the room that the player is in:\n"
        + "Add player successfully, the current player information:\n"
        + "Target name: Doctor Lucky, Current room: Armory\n"
        + "Character name: p1, Current room: Armory, items: [], player type: human\n" + "\n"
        + "Enter 1 to add a player; Enter 2 to add a computer player; Enter 3 to"
        + " start the game; Enter 4 to quit the game\n"
        + "Game start! The players are listed as follow: \n"
        + "Target name: Doctor Lucky, Current room: Armory\n"
        + "Character name: p1, Current room: Armory, items: [], player type: human\n"
        + "Now we are in the 1 turn\n" + "The player in current turn is: p1\n"
        + "The information of the room that the player is in:\n"
        + "---------------------------------\n" + "SpecifiedRoom{name='Armory', index=0, \n"
        + "leftCorner=19, rightCorner=26, upperCorner=22, lowerCorner=23, \n"
        + "items in the room =[Revolver], \n"
        + "characters=[Target name: Doctor Lucky, Current room: Armory, Character name"
        + ": p1, Current room: Armory, items: [], player type: human]}, \n"
        + "neighbours = [Dining Hall, Billiard Room, ][][][Drawing Room, ], \n"
        + "visibleRooms = [Dining Hall, Billiard Room, Trophy Room, Library, Nursery,"
        + " Tennessee Room, Lilac Room, Master Suite, Drawing Room, Wine Cellar, ]\n"
        + "---------------------------------\n"
        + "Enter 1 to move to neighbour. Then enter the direction and index of the neighbour\n"
        + "Enter 2 to pick up an item in the room. Then enter the index of the item\n"
        + "Enter 3 to look around\n" + "Invalid index, please enter again\n"
        + "Now the status of players are shown as follow:\n"
        + "Target name: Doctor Lucky, Current room: Billiard Room\n"
        + "Character name: p1, Current room: Armory, items: [], player type: human\n" + "\n"
        + "Now we are in the 1 turn\n" + "The player in current turn is: p1\n"
        + "The information of the room that the player is in:\n"
        + "---------------------------------\n" + "SpecifiedRoom{name='Armory', index=0, \n"
        + "leftCorner=19, rightCorner=26, upperCorner=22, lowerCorner=23, \n"
        + "items in the room =[Revolver], \n"
        + "characters=[Character name: p1, Current room: Armory, items: [], player "
        + "type: human]}, \n"
        + "neighbours = [Dining Hall, Billiard Room, ][][][Drawing Room, ], \n"
        + "visibleRooms = [Dining Hall, Billiard Room, Trophy Room, Library, Nursery, "
        + "Tennessee Room, Lilac Room, Master Suite, Drawing Room, Wine Cellar, ]\n"
        + "---------------------------------\n"
        + "Enter 1 to move to neighbour. Then enter the direction and index of the neighbour\n"
        + "Enter 2 to pick up an item in the room. Then enter the index of the item\n"
        + "Enter 3 to look around\n" + "Game quit!\n");
    assertEquals(expectOutput.toString(), gamelog.toString());
  }

  @Test
  public void testLookAround() {
    StringReader input = new StringReader("1 p1 1 0 1 p2 2 1 2 p3 3 10 3 3 q");
    StringBuffer gamelog = new StringBuffer();
    Controller c = new GamingConsoleController(input, gamelog);
    c.playGame(gamingModel);
    expectOutput.append(
        "Enter 1 to add a player; Enter 2 to add a computer player; Enter 3 to start t"
            + "he game; Enter 4 to quit the game\n" + "Please enter the name of the player:\n"
            + "Please enter the capacity:\n"
            + "Please enter the index of the room that the player is in:\n"
            + "Add player successfully, the current player information:\n"
            + "Target name: Doctor Lucky, Current room: Armory\n"
            + "Character name: p1, Current room: Armory, items: [], player type: human\n" + "\n"
            + "Enter 1 to add a player; Enter 2 to add a computer player; Enter 3 to s"
            + "tart the game; Enter 4 to quit the game\n" + "Please enter the name of the player:\n"
            + "Please enter the capacity:\n"
            + "Please enter the index of the room that the player is in:\n"
            + "Add player successfully, the current player information:\n"
            + "Target name: Doctor Lucky, Current room: Armory\n"
            + "Character name: p1, Current room: Armory, items: [], player type: human\n"
            + "Character name: p2, Current room: Billiard Room, items: [], player type: human\n"
            + "\n" + "Enter 1 to add a player; Enter 2 to add a computer player; Enter 3 to "
            + "start the game; Enter 4 to quit the game\n"
            + "Please enter the name of the player:\n" + "Please enter the capacity:\n"
            + "Please enter the index of the room that the player is in:\n"
            + "Add player successfully, the current player information:\n"
            + "Target name: Doctor Lucky, Current room: Armory\n"
            + "Character name: p1, Current room: Armory, items: [], player type: human\n"
            + "Character name: p2, Current room: Billiard Room, items: [], player type: human\n"
            + "Character name: p3, Current room: Library, items: [], player type: computer\n" + "\n"
            + "Enter 1 to add a player; Enter 2 to add a computer player; Enter 3 to"
            + " start the game; Enter 4 to quit the game\n"
            + "Game start! The players are listed as follow: \n"
            + "Target name: Doctor Lucky, Current room: Armory\n"
            + "Character name: p1, Current room: Armory, items: [], player type: human\n"
            + "Character name: p2, Current room: Billiard Room, items: [], player type: human\n"
            + "Character name: p3, Current room: Library, items: [], player type: computer\n"
            + "Now we are in the 1 turn\n" + "The player in current turn is: p1\n"
            + "The information of the room that the player is in:\n"
            + "---------------------------------\n" + "SpecifiedRoom{name='Armory', index=0, \n"
            + "leftCorner=19, rightCorner=26, upperCorner=22, lowerCorner=23, \n"
            + "items in the room =[Revolver], \n"
            + "characters=[Target name: Doctor Lucky, Current room: Armory, Character n"
            + "ame: p1, Current room: Armory, items: [], player type: human]}, \n"
            + "neighbours = [Dining Hall, Billiard Room, ][][][Drawing Room, ], \n"
            + "visibleRooms = [Dining Hall, Billiard Room, Trophy Room, Library, Nursery,"
            + " Tennessee Room, Lilac Room, Master Suite, Drawing Room, Wine Cellar, ]\n"
            + "---------------------------------\n"
            + "Enter 1 to move to neighbour. Then enter the direction and index of the neighbour\n"
            + "Enter 2 to pick up an item in the room. Then enter the index of the item\n"
            + "Enter 3 to look around\n" + "p1looks around!\n"
            + "Character name: p2, Current room: Billiard Room, items: [], player type: human\n"
            + "Visible Rooms: Visible room of Billiard Room: [Trophy Room, Library, Nursery, A"
            + "rmory, Dining Hall, Parlor, Kitchen, ]\n"
            + "Character name: p3, Current room: Library, items: [], player type: computer\n"
            + "Visible Rooms: Visible room of Library: [Nursery, Trophy Room, Billiard Room"
            + ", Armory, Master Suite, Lilac Room, Lancaster Room, Servants' Quarters, ]\n"
            + "Now the status of players are shown as follow:\n"
            + "Target name: Doctor Lucky, Current room: Billiard Room\n"
            + "Character name: p1, Current room: Armory, items: [], player type: human\n"
            + "Character name: p2, Current room: Billiard Room, items: [], player type: human\n"
            + "Character name: p3, Current room: Library, items: [], player type: computer\n" + "\n"
            + "Now we are in the 2 turn\n" + "The player in current turn is: p2\n"
            + "The information of the room that the player is in:\n"
            + "---------------------------------\n"
            + "SpecifiedRoom{name='Billiard Room', index=1, \n"
            + "leftCorner=21, rightCorner=28, upperCorner=16, lowerCorner=21, \n"
            + "items in the room =[Billiard Cue], \n"
            + "characters=[Character name: p2, Current room: Billiard Room, items: [],"
            + " player type: human, Target name: Doctor Lucky, Current room: Billiard Room]}, \n"
            + "neighbours = [Trophy Room, ][][Armory, ][Dining Hall, ], \n"
            + "visibleRooms = [Trophy Room, Library, Nursery, Armory, Dining Hall, Par"
            + "lor, Kitchen, ]\n" + "---------------------------------\n"
            + "Enter 1 to move to neighbour. Then enter the direction and index of the neighbour\n"
            + "Enter 2 to pick up an item in the room. Then enter the index of the item\n"
            + "Enter 3 to look around\n" + "Game quit!\n");
    assertEquals(expectOutput.toString(), gamelog.toString());
  }

  @Test
  public void testMovePet() {
    StringReader input = new StringReader("1 p1 1 0 1 p2 2 1 2 p3 3 10 3 4 0 0 q");
    StringBuffer gamelog = new StringBuffer();
    Controller c = new GamingConsoleController(input, gamelog);
    c.playGame(gamingModel);
    expectOutput.append("Enter 1 to add a player; Enter 2 to add a computer player; Enter 3 to"
        + " start the game; Enter 4 to quit the game\n" + "Please enter the name of the player:\n"
        + "Please enter the capacity:\n"
        + "Please enter the index of the room that the player is in:\n"
        + "Add player successfully, the current player information:\n"
        + "Target name: Doctor Lucky, Current room: Armory\n"
        + "Character name: p1, Current room: Armory, items: [], player type: human\n" + "\n"
        + "Enter 1 to add a player; Enter 2 to add a computer player; Enter 3 to start the game; "
        + "Enter 4 to quit the game\n" + "Please enter the name of the player:\n"
        + "Please enter the capacity:\n"
        + "Please enter the index of the room that the player is in:\n"
        + "Add player successfully, the current player information:\n"
        + "Target name: Doctor Lucky, Current room: Armory\n"
        + "Character name: p1, Current room: Armory, items: [], player type: human\n"
        + "Character name: p2, Current room: Billiard Room, items: [], player type: human\n" + "\n"
        + "Enter 1 to add a player; Enter 2 to add a computer player; Enter 3 to start the game;"
        + " Enter 4 to quit the game\n" + "Please enter the name of the player:\n"
        + "Please enter the capacity:\n"
        + "Please enter the index of the room that the player is in:\n"
        + "Add player successfully, the current player information:\n"
        + "Target name: Doctor Lucky, Current room: Armory\n"
        + "Character name: p1, Current room: Armory, items: [], player type: human\n"
        + "Character name: p2, Current room: Billiard Room, items: [], player type: human\n"
        + "Character name: p3, Current room: Library, items: [], player type: computer\n" + "\n"
        + "Enter 1 to add a player; Enter 2 to add a computer player; Enter 3 to start the game; "
        + "Enter 4 to quit the game\n" + "Game start! The players are listed as follow: \n"
        + "Target name: Doctor Lucky, Current room: Armory\n"
        + "Character name: p1, Current room: Armory, items: [], player type: human\n"
        + "Character name: p2, Current room: Billiard Room, items: [], player type: human\n"
        + "Character name: p3, Current room: Library, items: [], player type: computer\n"
        + "---------------------------------\n" + "Now we are in the 1 turn\n"
        + "The player in current turn is: p1\n" + "\n" + "The items of the player are:\n" + "\n"
        + "\n" + "The information of the room that the player is in:\n" + "Room name:Armory\n"
        + "Characters: Fortune the Cat, Doctor Lucky, p1, \n" + "Items: Revolver, \n"
        + "Neighbours: [Dining Hall, Billiard Room, ], [], [], [Drawing Room, ], \n" + "\n"
        + "The status of target and pet are:\n" + "Target room: Armory, health: 5\n"
        + "Pet room: Armory\n" + "\n"
        + "Enter 1 to move to neighbour. Then enter the direction and index of the neighbour\n"
        + "Enter 2 to pick up an item in the room. Then enter the index of the item\n"
        + "Enter 3 to look around\n"
        + "Enter 4 to move the pet. Then enter the direction and index of the neighbour\n"
        + "Enter 5 to attempt to kill the target. Then enter the index of item you want to use"
        + "(enter 0 if you do not have any item)\n" + "---------------------------------\n"
        + "---------------------------------\n" + "Now we are in the 2 turn\n"
        + "The player in current turn is: p2\n" + "\n" + "The items of the player are:\n" + "\n"
        + "\n" + "The information of the room that the player is in:\n"
        + "Room name:Billiard Room\n" + "Characters: p2, Doctor Lucky, \n"
        + "Items: Billiard Cue, \n"
        + "Neighbours: [Trophy Room, ], [], [Armory, ], [Dining Hall, ], \n" + "\n"
        + "The status of target and pet are:\n" + "Target room: Billiard Room, health: 5\n"
        + "Pet room: Kitchen\n" + "\n"
        + "Enter 1 to move to neighbour. Then enter the direction and index of the neighbour\n"
        + "Enter 2 to pick up an item in the room. Then enter the index of the item\n"
        + "Enter 3 to look around\n"
        + "Enter 4 to move the pet. Then enter the direction and index of the neighbour\n"
        + "Enter 5 to attempt to kill the target. Then enter the index of item you want to"
        + " use(enter 0 if you do not have any item)\n" + "---------------------------------\n"
        + "Game quit!\n");
    assertEquals(expectOutput.toString(), gamelog.toString());
  }

  @Test
  public void testAttempt() {
    StringReader input = new StringReader("1 p1 1 8 1 p2 2 4 2 p3 3 10 3 3 2 0 3 5 0 3 q");
    StringBuffer gamelog = new StringBuffer();
    Controller c = new GamingConsoleController(input, gamelog);
    c.playGame(gamingModel);
    expectOutput.append("Enter 1 to add a player; Enter 2 to add a computer player; Enter 3 to "
        + "start the game; Enter 4 to quit the game\n" + "Please enter the name of the player:\n"
        + "Please enter the capacity:\n"
        + "Please enter the index of the room that the player is in:\n"
        + "Add player successfully, the current player information:\n"
        + "Target name: Doctor Lucky, Current room: Armory\n"
        + "Character name: p1, Current room: Kitchen, items: [], player type: human\n" + "\n"
        + "Enter 1 to add a player; Enter 2 to add a computer player; Enter 3 to start the game; "
        + "Enter 4 to quit the game\n" + "Please enter the name of the player:\n"
        + "Please enter the capacity:\n"
        + "Please enter the index of the room that the player is in:\n"
        + "Add player successfully, the current player information:\n"
        + "Target name: Doctor Lucky, Current room: Armory\n"
        + "Character name: p1, Current room: Kitchen, items: [], player type: human\n"
        + "Character name: p2, Current room: Drawing Room, items: [], player type: human\n" + "\n"
        + "Enter 1 to add a player; Enter 2 to add a computer player; Enter 3 to start the game; "
        + "Enter 4 to quit the game\n" + "Please enter the name of the player:\n"
        + "Please enter the capacity:\n"
        + "Please enter the index of the room that the player is in:\n"
        + "Add player successfully, the current player information:\n"
        + "Target name: Doctor Lucky, Current room: Armory\n"
        + "Character name: p1, Current room: Kitchen, items: [], player type: human\n"
        + "Character name: p2, Current room: Drawing Room, items: [], player type: human\n"
        + "Character name: p3, Current room: Library, items: [], player type: computer\n" + "\n"
        + "Enter 1 to add a player; Enter 2 to add a computer player; Enter 3 to start the game;"
        + " Enter 4 to quit the game\n" + "Game start! The players are listed as follow: \n"
        + "Target name: Doctor Lucky, Current room: Armory\n"
        + "Character name: p1, Current room: Kitchen, items: [], player type: human\n"
        + "Character name: p2, Current room: Drawing Room, items: [], player type: human\n"
        + "Character name: p3, Current room: Library, items: [], player type: computer\n"
        + "---------------------------------\n" + "Now we are in the 1 turn\n"
        + "The player in current turn is: p1\n" + "\n" + "The items of the player are:\n" + "\n"
        + "\n" + "The information of the room that the player is in:\n" + "Room name:Kitchen\n"
        + "Characters: p1, \n" + "Items: Crepe Pan, Sharp Knife, \n"
        + "Neighbours: [Parlor, ], [Dining Hall, ], [Wine Cellar, ], [], \n" + "\n"
        + "The status of target and pet are:\n" + "Target room: Armory, health: 5\n"
        + "Pet room: Armory\n" + "\n"
        + "Enter 1 to move to neighbour. Then enter the direction and index of the neighbour\n"
        + "Enter 2 to pick up an item in the room. Then enter the index of the item\n"
        + "Enter 3 to look around\n"
        + "Enter 4 to move the pet. Then enter the direction and index of the neighbour\n"
        + "Enter 5 to attempt to kill the target. Then enter the index of item you want to us"
        + "e(enter 0 if you do not have any item)\n" + "---------------------------------\n"
        + "p1 looks around!\n" + "Information of the current room:\n" + "Room name:Kitchen\n"
        + "Characters: p1, \n" + "Items: Crepe Pan, Sharp Knife, \n"
        + "Neighbours: [Parlor, ], [Dining Hall, ], [Wine Cellar, ], [], \n" + "\n"
        + "Visible room of Kitchen:\n" + "Room name:Parlor\n" + "Characters: \n" + "Items: \n"
        + "Neighbours: [Servants' Quarters, ], [Dining Hall, Tennessee Room, ], [Kitchen, ], [], \n"
        + "\n" + "Room name:Dining Hall\n" + "Characters: \n" + "Items: \n"
        + "Neighbours: [Tennessee Room, ], [Billiard Room, Trophy Room, ], [Armory, Wine Cellar,"
        + " Drawing Room, ], [Parlor, Kitchen, ], \n" + "\n" + "Room name:Wine Cellar\n"
        + "Characters: \n" + "Items: Rat Poison, Piece of Rope, \n"
        + "Neighbours: [Dining Hall, Kitchen, ], [Drawing Room, ], [], [], \n" + "\n"
        + "---------------------------------\n" + "Now we are in the 2 turn\n"
        + "The player in current turn is: p2\n" + "\n" + "The items of the player are:\n" + "\n"
        + "\n" + "The information of the room that the player is in:\n" + "Room name:Drawing Room\n"
        + "Characters: p2, Fortune the Cat, \n" + "Items: Letter Opener, \n"
        + "Neighbours: [Dining Hall, ], [Armory, ], [Foyer, ], [Wine Cellar, ], \n" + "\n"
        + "The status of target and pet are:\n" + "Target room: Billiard Room, health: 5\n"
        + "Pet room: Drawing Room\n" + "\n"
        + "Enter 1 to move to neighbour. Then enter the direction and index of the neighbour\n"
        + "Enter 2 to pick up an item in the room. Then enter the index of the item\n"
        + "Enter 3 to look around\n"
        + "Enter 4 to move the pet. Then enter the direction and index of the neighbour\n"
        + "Enter 5 to attempt to kill the target. Then enter the index of item you want to use("
        + "enter 0 if you do not have any item)\n" + "---------------------------------\n"
        + "---------------------------------\n" + "Computer p3 moves to the neighbour!\n"
        + "---------------------------------\n" + "---------------------------------\n"
        + "Now we are in the 4 turn\n" + "The player in current turn is: p1\n" + "\n"
        + "The items of the player are:\n" + "\n" + "\n"
        + "The information of the room that the player is in:\n" + "Room name:Kitchen\n"
        + "Characters: p1, Fortune the Cat, \n" + "Items: Crepe Pan, Sharp Knife, \n"
        + "Neighbours: [Parlor, ], [Dining Hall, ], [Wine Cellar, ], [], \n" + "\n"
        + "The status of target and pet are:\n" + "Target room: Dining Hall, health: 5\n"
        + "Pet room: Kitchen\n" + "\n"
        + "Enter 1 to move to neighbour. Then enter the direction and index of the neighbour\n"
        + "Enter 2 to pick up an item in the room. Then enter the index of the item\n"
        + "Enter 3 to look around\n"
        + "Enter 4 to move the pet. Then enter the direction and index of the neighbour\n"
        + "Enter 5 to attempt to kill the target. Then enter the index of item you want to use"
        + "(enter 0 if you do not have any item)\n" + "---------------------------------\n"
        + "p1 looks around!\n" + "Information of the current room:\n" + "Room name:Kitchen\n"
        + "Characters: p1, Fortune the Cat, \n" + "Items: Crepe Pan, Sharp Knife, \n"
        + "Neighbours: [Parlor, ], [Dining Hall, ], [Wine Cellar, ], [], \n" + "\n"
        + "Visible room of Kitchen:\n" + "Room name:Parlor\n" + "Characters: \n" + "Items: \n"
        + "Neighbours: [Servants' Quarters, ], [Dining Hall, Tennessee Room, ], [Kitchen, ], [], \n"
        + "\n" + "Room name:Dining Hall\n" + "Characters: Doctor Lucky, \n" + "Items: \n"
        + "Neighbours: [Tennessee Room, ], [Billiard Room, Trophy Room, ], [Armory, Wine Cellar, "
        + "Drawing Room, ], [Parlor, Kitchen, ], \n" + "\n" + "Room name:Wine Cellar\n"
        + "Characters: \n" + "Items: Rat Poison, Piece of Rope, \n"
        + "Neighbours: [Dining Hall, Kitchen, ], [Drawing Room, ], [], [], \n" + "\n"
        + "---------------------------------\n" + "Now we are in the 5 turn\n"
        + "The player in current turn is: p2\n" + "\n" + "The items of the player are:\n"
        + "Letter Opener, damage point: 2\n" + "\n" + "\n"
        + "The information of the room that the player is in:\n" + "Room name:Drawing Room\n"
        + "Characters: p2, Doctor Lucky, \n" + "Items: \n"
        + "Neighbours: [Dining Hall, ], [Armory, ], [Foyer, ], [Wine Cellar, ], \n" + "\n"
        + "The status of target and pet are:\n" + "Target room: Drawing Room, health: 5\n"
        + "Pet room: Parlor\n" + "\n"
        + "Enter 1 to move to neighbour. Then enter the direction and index of the neighbour\n"
        + "Enter 2 to pick up an item in the room. Then enter the index of the item\n"
        + "Enter 3 to look around\n"
        + "Enter 4 to move the pet. Then enter the direction and index of the neighbour\n"
        + "Enter 5 to attempt to kill the target. Then enter the index of item you want to use"
        + "(enter 0 if you do not have any item)\n" + "---------------------------------\n"
        + "---------------------------------\n" + "Computer p3 Look around!\n"
        + "---------------------------------\n" + "---------------------------------\n"
        + "Now we are in the 7 turn\n" + "The player in current turn is: p1\n" + "\n"
        + "The items of the player are:\n" + "\n" + "\n"
        + "The information of the room that the player is in:\n" + "Room name:Kitchen\n"
        + "Characters: p1, \n" + "Items: Crepe Pan, Sharp Knife, \n"
        + "Neighbours: [Parlor, ], [Dining Hall, ], [Wine Cellar, ], [], \n" + "\n"
        + "The status of target and pet are:\n" + "Target room: Green House, health: 3\n"
        + "Pet room: Trophy Room\n" + "\n"
        + "Enter 1 to move to neighbour. Then enter the direction and index of the neighbour\n"
        + "Enter 2 to pick up an item in the room. Then enter the index of the item\n"
        + "Enter 3 to look around\n"
        + "Enter 4 to move the pet. Then enter the direction and index of the neighbour\n"
        + "Enter 5 to attempt to kill the target. Then enter the index of item you want to use"
        + "(enter 0 if you do not have any item)\n" + "---------------------------------\n"
        + "p1 looks around!\n" + "Information of the current room:\n" + "Room name:Kitchen\n"
        + "Characters: p1, \n" + "Items: Crepe Pan, Sharp Knife, \n"
        + "Neighbours: [Parlor, ], [Dining Hall, ], [Wine Cellar, ], [], \n" + "\n"
        + "Visible room of Kitchen:\n" + "Room name:Parlor\n" + "Characters: \n" + "Items: \n"
        + "Neighbours: [Servants' Quarters, ], [Dining Hall, Tennessee Room, ], [Kitchen, ], [], \n"
        + "\n" + "Room name:Dining Hall\n" + "Characters: \n" + "Items: \n"
        + "Neighbours: [Tennessee Room, ], [Billiard Room, Trophy Room, ], [Armory, Wine Cellar, "
        + "Drawing Room, ], [Parlor, Kitchen, ], \n" + "\n" + "Room name:Wine Cellar\n"
        + "Characters: \n" + "Items: Rat Poison, Piece of Rope, \n"
        + "Neighbours: [Dining Hall, Kitchen, ], [Drawing Room, ], [], [], \n" + "\n"
        + "---------------------------------\n" + "Now we are in the 8 turn\n"
        + "The player in current turn is: p2\n" + "\n" + "The items of the player are:\n" + "\n"
        + "\n" + "The information of the room that the player is in:\n" + "Room name:Drawing Room\n"
        + "Characters: p2, \n" + "Items: \n"
        + "Neighbours: [Dining Hall, ], [Armory, ], [Foyer, ], [Wine Cellar, ], \n" + "\n"
        + "The status of target and pet are:\n" + "Target room: Hedge Maze, health: 3\n"
        + "Pet room: Library\n" + "\n"
        + "Enter 1 to move to neighbour. Then enter the direction and index of the neighbour\n"
        + "Enter 2 to pick up an item in the room. Then enter the index of the item\n"
        + "Enter 3 to look around\n"
        + "Enter 4 to move the pet. Then enter the direction and index of the neighbour\n"
        + "Enter 5 to attempt to kill the target. Then enter the index of item you want to use"
        + "(enter 0 if you do not have any item)\n" + "---------------------------------\n"
        + "Game quit!\n");
    assertEquals(expectOutput.toString(), gamelog.toString());
  }

  @Test
  public void endWithMaxTurn() {
    StringReader input = new StringReader("2 p1 1 0 2 p2 1 1 2 p3 2 2 2 p4 1 4 3");
    StringBuffer gamelog = new StringBuffer();
    Controller c = new GamingConsoleController(input, gamelog);
    c.playGame(gamingModel);
    expectOutput.append("Enter 1 to add a player; Enter 2 to add a computer player; Enter 3 to "
        + "start the game; Enter 4 to quit the game\n" + "Please enter the name of the player:\n"
        + "Please enter the capacity:\n"
        + "Please enter the index of the room that the player is in:\n"
        + "Add player successfully, the current player information:\n"
        + "Target name: Doctor Lucky, Current room: Armory\n"
        + "Character name: p1, Current room: Armory, items: [], player type: computer\n" + "\n"
        + "Enter 1 to add a player; Enter 2 to add a computer player; Enter 3 to start the game; "
        + "Enter 4 to quit the game\n" + "Please enter the name of the player:\n"
        + "Please enter the capacity:\n"
        + "Please enter the index of the room that the player is in:\n"
        + "Add player successfully, the current player information:\n"
        + "Target name: Doctor Lucky, Current room: Armory\n"
        + "Character name: p1, Current room: Armory, items: [], player type: computer\n"
        + "Character name: p2, Current room: Billiard Room, items: [], player type: computer\n"
        + "\n"
        + "Enter 1 to add a player; Enter 2 to add a computer player; Enter 3 to start the game; "
        + "Enter 4 to quit the game\n" + "Please enter the name of the player:\n"
        + "Please enter the capacity:\n"
        + "Please enter the index of the room that the player is in:\n"
        + "Add player successfully, the current player information:\n"
        + "Target name: Doctor Lucky, Current room: Armory\n"
        + "Character name: p1, Current room: Armory, items: [], player type: computer\n"
        + "Character name: p2, Current room: Billiard Room, items: [], player type: computer\n"
        + "Character name: p3, Current room: Carriage House, items: [], player type: computer\n"
        + "\n"
        + "Enter 1 to add a player; Enter 2 to add a computer player; Enter 3 to start the game;"
        + " Enter 4 to quit the game\n" + "Please enter the name of the player:\n"
        + "Please enter the capacity:\n"
        + "Please enter the index of the room that the player is in:\n"
        + "Add player successfully, the current player information:\n"
        + "Target name: Doctor Lucky, Current room: Armory\n"
        + "Character name: p1, Current room: Armory, items: [], player type: computer\n"
        + "Character name: p2, Current room: Billiard Room, items: [], player type: computer\n"
        + "Character name: p3, Current room: Carriage House, items: [], player type: computer\n"
        + "Character name: p4, Current room: Drawing Room, items: [], player type: computer\n"
        + "\n"
        + "Enter 1 to add a player; Enter 2 to add a computer player; Enter 3 to start the game; "
        + "Enter 4 to quit the game\n" + "Game start! The players are listed as follow: \n"
        + "Target name: Doctor Lucky, Current room: Armory\n"
        + "Character name: p1, Current room: Armory, items: [], player type: computer\n"
        + "Character name: p2, Current room: Billiard Room, items: [], player type: computer\n"
        + "Character name: p3, Current room: Carriage House, items: [], player type: computer\n"
        + "Character name: p4, Current room: Drawing Room, items: [], player type: computer\n"
        + "---------------------------------\n" + "Computer p1 attempts to kill the target!\n"
        + "---------------------------------\n" + "---------------------------------\n"
        + "Computer p2 attempts to kill the target!\n"
        + "Computer p2 attempts failed, be seen by others!\n"
        + "---------------------------------\n" + "---------------------------------\n"
        + "Computer p3 attempts to kill the target!\n" + "---------------------------------\n"
        + "---------------------------------\n" + "Computer p4 pick up an item!\n"
        + "---------------------------------\n" + "---------------------------------\n"
        + "Computer p1 Look around!\n" + "---------------------------------\n"
        + "---------------------------------\n" + "Computer p2 Look around!\n"
        + "---------------------------------\n" + "---------------------------------\n"
        + "Computer p3 pick up an item!\n" + "---------------------------------\n"
        + "---------------------------------\n" + "Computer p4 Look around!\n"
        + "---------------------------------\n" + "---------------------------------\n"
        + "Computer p1 pick up an item!\n" + "---------------------------------\n"
        + "---------------------------------\n" + "Computer p2 pick up an item!\n"
        + "---------------------------------\n" + "---------------------------------\n"
        + "Computer p3 moves to the neighbour!\n" + "---------------------------------\n"
        + "---------------------------------\n" + "Computer p4 Look around!\n"
        + "---------------------------------\n" + "---------------------------------\n"
        + "Computer p1 moves to the neighbour!\n" + "---------------------------------\n"
        + "---------------------------------\n" + "Computer p2 moves to the neighbour!\n"
        + "---------------------------------\n" + "---------------------------------\n"
        + "Computer p3 Look around!\n" + "---------------------------------\n"
        + "---------------------------------\n" + "Computer p4 moves to the neighbour!\n"
        + "---------------------------------\n" + "---------------------------------\n"
        + "Computer p1 moves to the neighbour!\n" + "---------------------------------\n"
        + "---------------------------------\n" + "Computer p2 moves to the neighbour!\n"
        + "---------------------------------\n" + "---------------------------------\n"
        + "Computer p3 Look around!\n" + "---------------------------------\n"
        + "---------------------------------\n" + "Computer p4 moves to the neighbour!\n"
        + "---------------------------------\n" + "---------------------------------\n"
        + "Computer p1 Look around!\n" + "---------------------------------\n"
        + "---------------------------------\n" + "Computer p2 Look around!\n"
        + "---------------------------------\n" + "---------------------------------\n"
        + "Computer p3 moves to the neighbour!\n" + "---------------------------------\n"
        + "---------------------------------\n" + "Computer p4 Look around!\n"
        + "---------------------------------\n" + "---------------------------------\n"
        + "Computer p1 Look around!\n" + "---------------------------------\n"
        + "---------------------------------\n" + "Computer p2 moves to the neighbour!\n"
        + "---------------------------------\n" + "---------------------------------\n"
        + "Computer p3 moves to the neighbour!\n" + "---------------------------------\n"
        + "---------------------------------\n" + "Computer p4 Look around!\n"
        + "---------------------------------\n" + "---------------------------------\n"
        + "Computer p1 moves to the neighbour!\n" + "---------------------------------\n"
        + "---------------------------------\n" + "Computer p2 Look around!\n"
        + "---------------------------------\n" + "Reach the max turn, and the game end!\n");
    assertEquals(expectOutput.toString(), gamelog.toString());
  }

  @Test
  public void endWithKill() {
    StringBuffer inputString = new StringBuffer();
    inputString.append("1 p1 1 0 1 p2 1 5 1 p3 1 2 1 p4 1 7 3 ");
    inputString.append("5 0 3 5 0 2 0 ");
    inputString.append("1 0 0 5 0 3 5 0 ");
    StringReader input = new StringReader(inputString.toString());
    StringBuffer gamelog = new StringBuffer();
    Controller c = new GamingConsoleController(input, gamelog);
    c.playGame(gamingModel);
    expectOutput.append(
        "Enter 1 to add a player; Enter 2 to add a computer player; Enter 3 to start the game; "
            + "Enter 4 to quit the game\n"
            + "Please enter the name of the player:\n" + "Please enter the capacity:\n"
            + "Please enter the index of the room that the player is in:\n"
            + "Add player successfully, the current player information:\n"
            + "Target name: Doctor Lucky, Current room: Armory\n"
            + "Character name: p1, Current room: Armory, items: [], player type: human\n" + "\n"
            + "Enter 1 to add a player; Enter 2 to add a computer player; Enter 3 to start the g"
            + "ame; Enter 4 to quit the game\n"
            + "Please enter the name of the player:\n" + "Please enter the capacity:\n"
            + "Please enter the index of the room that the player is in:\n"
            + "Add player successfully, the current player information:\n"
            + "Target name: Doctor Lucky, Current room: Armory\n"
            + "Character name: p1, Current room: Armory, items: [], player type: human\n"
            + "Character name: p2, Current room: Foyer, items: [], player type: human\n" + "\n"
            + "Enter 1 to add a player; Enter 2 to add a computer player; Enter 3 to start the "
            + "game; Enter 4 to quit the game\n"
            + "Please enter the name of the player:\n" + "Please enter the capacity:\n"
            + "Please enter the index of the room that the player is in:\n"
            + "Add player successfully, the current player information:\n"
            + "Target name: Doctor Lucky, Current room: Armory\n"
            + "Character name: p1, Current room: Armory, items: [], player type: human\n"
            + "Character name: p2, Current room: Foyer, items: [], player type: human\n"
            + "Character name: p3, Current room: Carriage House, items: [], player type: human\n"
            + "\n"
            + "Enter 1 to add a player; Enter 2 to add a computer player; Enter 3 to start the "
            + "game; Enter 4 to quit the game\n"
            + "Please enter the name of the player:\n" + "Please enter the capacity:\n"
            + "Please enter the index of the room that the player is in:\n"
            + "Add player successfully, the current player information:\n"
            + "Target name: Doctor Lucky, Current room: Armory\n"
            + "Character name: p1, Current room: Armory, items: [], player type: human\n"
            + "Character name: p2, Current room: Foyer, items: [], player type: human\n"
            + "Character name: p3, Current room: Carriage House, items: [], player type: human\n"
            + "Character name: p4, Current room: Hedge Maze, items: [], player type: human\n" + "\n"
            + "Enter 1 to add a player; Enter 2 to add a computer player; Enter 3 to start the gam"
            + "e; Enter 4 to quit the game\n"
            + "Game start! The players are listed as follow: \n"
            + "Target name: Doctor Lucky, Current room: Armory\n"
            + "Character name: p1, Current room: Armory, items: [], player type: human\n"
            + "Character name: p2, Current room: Foyer, items: [], player type: human\n"
            + "Character name: p3, Current room: Carriage House, items: [], player type: human\n"
            + "Character name: p4, Current room: Hedge Maze, items: [], player type: human\n"
            + "---------------------------------\n" + "Now we are in the 1 turn\n"
            + "The player in current turn is: p1\n" + "\n" + "The items of the player are:\n" + "\n"
            + "\n" + "The information of the room that the player is in:\n" + "Room name:Armory\n"
            + "Characters: Fortune the Cat, Doctor Lucky, p1, \n" + "Items: Revolver, \n"
            + "Neighbours: [Dining Hall, Billiard Room, ], [], [], [Drawing Room, ], \n" + "\n"
            + "The status of target and pet are:\n" + "Target room: Armory, health: 5\n"
            + "Pet room: Armory\n" + "\n"
            + "Enter 1 to move to neighbour. Then enter the direction and index of the neighbour\n"
            + "Enter 2 to pick up an item in the room. Then enter the index of the item\n"
            + "Enter 3 to look around\n"
            + "Enter 4 to move the pet. Then enter the direction and index of the neighbour\n"
            + "Enter 5 to attempt to kill the target. Then enter the index of item you want to u"
            + "se(enter 0 if you do not have any item)\n"
            + "---------------------------------\n" + "---------------------------------\n"
            + "Now we are in the 2 turn\n" + "The player in current turn is: p2\n" + "\n"
            + "The items of the player are:\n" + "\n" + "\n"
            + "The information of the room that the player is in:\n" + "Room name:Foyer\n"
            + "Characters: p2, \n" + "Items: \n"
            + "Neighbours: [Drawing Room, ], [], [Piazza, ], [], \n" + "\n"
            + "The status of target and pet are:\n" + "Target room: Billiard Room, health: 4\n"
            + "Pet room: Drawing Room\n" + "\n"
            + "Enter 1 to move to neighbour. Then enter the direction and index of the neighbour\n"
            + "Enter 2 to pick up an item in the room. Then enter the index of the item\n"
            + "Enter 3 to look around\n"
            + "Enter 4 to move the pet. Then enter the direction and index of the neighbour\n"
            + "Enter 5 to attempt to kill the target. Then enter the index of item you want to us"
            + "e(enter 0 if you do not have any item)\n"
            + "---------------------------------\n" + "p2 looks around!\n"
            + "Information of the current room:\n" + "Room name:Foyer\n" + "Characters: p2, \n"
            + "Items: \n" + "Neighbours: [Drawing Room, ], [], [Piazza, ], [], \n" + "\n"
            + "Visible room of Foyer:\n" + "Room name:Piazza\n" + "Characters: \n"
            + "Items: Civil War Cannon, \n"
            + "Neighbours: [Foyer, ], [Hedge Maze, ], [], [Winter Garden, ], \n" + "\n"
            + "---------------------------------\n" + "Now we are in the 3 turn\n"
            + "The player in current turn is: p3\n" + "\n" + "The items of the player are:\n" + "\n"
            + "\n" + "The information of the room that the player is in:\n"
            + "Room name:Carriage House\n" + "Characters: p3, Doctor Lucky, \n"
            + "Items: Chain Saw, Big Red Hammer, \n"
            + "Neighbours: [], [Winter Garden, ], [], [], \n" + "\n"
            + "The status of target and pet are:\n" + "Target room: Carriage House, health: 4\n"
            + "Pet room: Wine Cellar\n" + "\n"
            + "Enter 1 to move to neighbour. Then enter the direction and index of the neighbour\n"
            + "Enter 2 to pick up an item in the room. Then enter the index of the item\n"
            + "Enter 3 to look around\n"
            + "Enter 4 to move the pet. Then enter the direction and index of the neighbour\n"
            + "Enter 5 to attempt to kill the target. Then enter the index of item you want to u"
            + "se(enter 0 if you do not have any item)\n"
            + "---------------------------------\n" + "---------------------------------\n"
            + "Now we are in the 4 turn\n" + "The player in current turn is: p4\n" + "\n"
            + "The items of the player are:\n" + "\n" + "\n"
            + "The information of the room that the player is in:\n" + "Room name:Hedge Maze\n"
            + "Characters: p4, \n" + "Items: Loud Noise, \n"
            + "Neighbours: [], [Green House, ], [], [Piazza, ], \n" + "\n"
            + "The status of target and pet are:\n" + "Target room: Dining Hall, health: 3\n"
            + "Pet room: Kitchen\n" + "\n"
            + "Enter 1 to move to neighbour. Then enter the direction and index of the neighbour\n"
            + "Enter 2 to pick up an item in the room. Then enter the index of the item\n"
            + "Enter 3 to look around\n"
            + "Enter 4 to move the pet. Then enter the direction and index of the neighbour\n"
            + "Enter 5 to attempt to kill the target. Then enter the index of item you want to u"
            + "se(enter 0 if you do not have any item)\n"
            + "---------------------------------\n" + "---------------------------------\n"
            + "Now we are in the 5 turn\n" + "The player in current turn is: p1\n" + "\n"
            + "The items of the player are:\n" + "\n" + "\n"
            + "The information of the room that the player is in:\n" + "Room name:Armory\n"
            + "Characters: p1, \n" + "Items: Revolver, \n"
            + "Neighbours: [Dining Hall, Billiard Room, ], [], [], [Drawing Room, ], \n" + "\n"
            + "The status of target and pet are:\n" + "Target room: Drawing Room, health: 3\n"
            + "Pet room: Parlor\n" + "\n"
            + "Enter 1 to move to neighbour. Then enter the direction and index of the neighbour\n"
            + "Enter 2 to pick up an item in the room. Then enter the index of the item\n"
            + "Enter 3 to look around\n"
            + "Enter 4 to move the pet. Then enter the direction and index of the neighbour\n"
            + "Enter 5 to attempt to kill the target. Then enter the index of item you want to"
            + " use(enter 0 if you do not have any item)\n" + "---------------------------------\n"
            + "---------------------------------\n" + "Now we are in the 6 turn\n"
            + "The player in current turn is: p2\n" + "\n" + "The items of the player are:\n" + "\n"
            + "\n" + "The information of the room that the player is in:\n" + "Room name:Foyer\n"
            + "Characters: p2, Doctor Lucky, \n" + "Items: \n"
            + "Neighbours: [Drawing Room, ], [], [Piazza, ], [], \n" + "\n"
            + "The status of target and pet are:\n" + "Target room: Foyer, health: 3\n"
            + "Pet room: Tennessee Room\n" + "\n"
            + "Enter 1 to move to neighbour. Then enter the direction and index of the neighbour\n"
            + "Enter 2 to pick up an item in the room. Then enter the index of the item\n"
            + "Enter 3 to look around\n"
            + "Enter 4 to move the pet. Then enter the direction and index of the neighbour\n"
            + "Enter 5 to attempt to kill the target. Then enter the index of item you want to "
            + "use(enter 0 if you do not have any item)\n" + "---------------------------------\n"
            + "---------------------------------\n" + "Now we are in the 7 turn\n"
            + "The player in current turn is: p3\n" + "\n" + "The items of the player are:\n" + "\n"
            + "\n" + "The information of the room that the player is in:\n"
            + "Room name:Carriage House\n" + "Characters: p3, \n"
            + "Items: Chain Saw, Big Red Hammer, \n"
            + "Neighbours: [], [Winter Garden, ], [], [], \n" + "\n"
            + "The status of target and pet are:\n" + "Target room: Green House, health: 2\n"
            + "Pet room: Trophy Room\n" + "\n"
            + "Enter 1 to move to neighbour. Then enter the direction and index of the neighbour\n"
            + "Enter 2 to pick up an item in the room. Then enter the index of the item\n"
            + "Enter 3 to look around\n"
            + "Enter 4 to move the pet. Then enter the direction and index of the neighbour\n"
            + "Enter 5 to attempt to kill the target. Then enter the index of item you want to "
            + "use(enter 0 if you do not have any item)\n" + "---------------------------------\n"
            + "p3 looks around!\n" + "Information of the current room:\n"
            + "Room name:Carriage House\n" + "Characters: p3, \n"
            + "Items: Chain Saw, Big Red Hammer, \n"
            + "Neighbours: [], [Winter Garden, ], [], [], \n" + "\n"
            + "Visible room of Carriage House:\n" + "Room name:Winter Garden\n" + "Characters: \n"
            + "Items: \n" + "Neighbours: [], [Piazza, ], [], [Carriage House, ], \n" + "\n"
            + "---------------------------------\n" + "Now we are in the 8 turn\n"
            + "The player in current turn is: p4\n" + "\n" + "The items of the player are:\n"
            + "Loud Noise, damage point: 2\n" + "\n" + "\n"
            + "The information of the room that the player is in:\n" + "Room name:Hedge Maze\n"
            + "Characters: p4, Doctor Lucky, \n" + "Items: \n"
            + "Neighbours: [], [Green House, ], [], [Piazza, ], \n" + "\n"
            + "The status of target and pet are:\n" + "Target room: Hedge Maze, health: 2\n"
            + "Pet room: Library\n" + "\n"
            + "Enter 1 to move to neighbour. Then enter the direction and index of the neighbour\n"
            + "Enter 2 to pick up an item in the room. Then enter the index of the item\n"
            + "Enter 3 to look around\n"
            + "Enter 4 to move the pet. Then enter the direction and index of the neighbour\n"
            + "Enter 5 to attempt to kill the target. Then enter the index of item you want to "
            + "use(enter 0 if you do not have any item)\n" + "---------------------------------\n"
            + "The game is over, the winner is: p4\n");
    assertEquals(expectOutput.toString(), gamelog.toString());
  }

}